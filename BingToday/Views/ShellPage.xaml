<Page
    x:Class="BingToday.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:BingToday.ViewModels"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:helpers="using:BingToday.Helpers"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d"
    x:Name="thisShellPage">
    <Page.Resources>
        <DataTemplate x:Key="NavigationMenuItemDataTemplate" x:DataType="vm:ShellNavigationItem">
            <Grid Width="320" Height="40" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle
                        Width="6"
                        Height="24"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Fill="{ThemeResource SystemControlForegroundAccentBrush}"
                        Visibility="{x:Bind SelectedVis, Mode=OneWay}" />
                <Viewbox
                        Child="{x:Bind Icon}"
                        ToolTipService.ToolTip="{x:Bind Label}"
                        Margin="16,12"
                        VerticalAlignment="Center" />
                <TextBlock
                        Grid.Column="1"
                        Margin="0,9,0,11"
                        VerticalAlignment="Center"
                        Foreground="{x:Bind SelectedForeground, Mode=OneWay}"
                        Text="{x:Bind Label}"
                        Style="{StaticResource BodyTextBlockStyle}"
                        TextTrimming="None" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerDownThemeAnimation TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DisabledStates">
                        <VisualState x:Name="Enabled" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ContentBorder"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                    Duration="0" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>

        <Duration x:Key="StoryboardDefaultDuration">0:0:0.5</Duration>

        <Storyboard x:Name="BackgroundStoryboard">
            <ColorAnimation x:Name="BackgroundColorAnimation" Storyboard.TargetName="NavigationMenu"
                            To="{x:Bind Mode=OneWay, Path=ViewModel.NewBackgroundColor}"
                            Duration="{StaticResource StoryboardDefaultDuration}"
                            Storyboard.TargetProperty="(controls:HamburgerMenu.PaneBackground).(SolidColorBrush.Color)"
                            />
            <!--From="{x:Bind Mode=OneWay,Path=NavigationMenu.PaneBackground.(SolidColorBrush.Color)}"-->
        </Storyboard>
        <Storyboard x:Name="ForegroundStoryboard">
            <ColorAnimation x:Name="ForegroundColorAnimation" Storyboard.TargetName="NavigationMenu"
                            To="{x:Bind Mode=OneWay, Path=ViewModel.NewForegroundColor}"
                            Duration="{StaticResource StoryboardDefaultDuration}"
                            Storyboard.TargetProperty="(controls:HamburgerMenu.PaneForeground).(SolidColorBrush.Color)"
                            />
            <!--From="{x:Bind Mode=OneWay,Path=NavigationMenu.PaneBackground.(SolidColorBrush.Color)}"-->
        </Storyboard>

        <Storyboard x:Name="DisplayModeStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NavigationMenu"
                                           Storyboard.TargetProperty="(controls:HamburgerMenu.DisplayMode)">
                <DiscreteObjectKeyFrame KeyTime="1" Value="{x:Bind ViewModel.NewSplitViewDisplayMode}"/>
            </ObjectAnimationUsingKeyFrames>
            <!--From="{x:Bind Mode=OneWay,Path=NavigationMenu.PaneBackground.(SolidColorBrush.Color)}"-->
        </Storyboard>



        <helpers:ColorToNullableConverter x:Key="ColorToNullableConverter"/>
    </Page.Resources>

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior SourceObject="{x:Bind thisShellPage}" EventName="Loaded">


            <ic:CallMethodAction MethodName="BeginThemeStoryBoards" TargetObject="{x:Bind thisShellPage}"/>
        </ic:EventTriggerBehavior>
        <ic:EventTriggerBehavior SourceObject="{x:Bind ViewModel}" EventName="ColorThemeChanged">


            <ic:CallMethodAction MethodName="BeginThemeStoryBoards" TargetObject="{x:Bind thisShellPage}"/>
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>


    <controls:HamburgerMenu
            x:Name="NavigationMenu"
            DisplayMode="{x:Bind ViewModel.DisplayMode, Mode=OneWay}"
            IsPaneOpen="{x:Bind ViewModel.IsPaneOpen, Mode=TwoWay}"
            ItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
            ItemsSource="{x:Bind ViewModel.PrimaryItems}"
            OptionsItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
            OptionsItemsSource="{x:Bind ViewModel.SecondaryItems}"
            PaneBackground="{ThemeResource SystemControlBackgroundAltHighBrush}"
            PaneForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
            >
        <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="ItemClick">
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemSelectedCommand}" />
            </ic:EventTriggerBehavior>
            <ic:EventTriggerBehavior EventName="OptionsItemClick">
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemSelectedCommand}" />
            </ic:EventTriggerBehavior>

        </i:Interaction.Behaviors>

        <Grid Background="{ThemeResource SystemControlBackgroundAltHighBrush}">
            <StackPanel>
                <Button Background="Red" Width="50" Height="50" HorizontalAlignment="Center" Click="Button_Click" />

                <Frame x:Name="shellFrame"/>
            </StackPanel>

        </Grid>
        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="WindowStates">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="CurrentStateChanged">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.StateChangedCommand}"/>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <VisualState x:Name="PanoramicState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </controls:HamburgerMenu>
</Page>
