<Page
    x:Class="BingToday.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helper="using:BingToday.Helpers"
    xmlns:xaml="using:Windows.UI.Xaml"
    xmlns:local="using:BingToday.Views"
    mc:Ignorable="d"
    local:MenuThemeService.NewBackgroundColor="#FF30A9DE"
    local:MenuThemeService.NewForegroundColor="#CCFFFFFF"
    local:MenuThemeService.NewSplitViewDisplayMode="CompactInline"
    >
    <Page.Resources>
        <helper:EnumToBooleanConverter x:Key="EnumToBooleanConverter" EnumType="ElementTheme" />


        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
        </Style>

        <Color x:Key="TitleBarColor">#FF353848</Color>

        <!--ToggleButton Colors-->
        <Color x:Key="CheckedColor">#FF30A9DE</Color>
        <Color x:Key="CheckedPointerOverColor">#FF54C5C1</Color>
        <Color x:Key="CheckedPressedColor">#FF6699CC</Color>

        <Color x:Key="UncheckedColor">#FF3E4348</Color>
        <Color x:Key="UncheckedPointerOverColor">#FF7C7877</Color>
        <Color x:Key="UncheckedPressedColor">#FF333030</Color>

        <SolidColorBrush x:Key="DarkButtonBorderBrush" Color="#EFDC05"/>
        <SolidColorBrush x:Key="CheckedBrush" Color="{StaticResource CheckedColor}"/>
        <SolidColorBrush x:Key="UncheckedBrush" Color="{StaticResource UncheckedColor}"/>

        <Style TargetType="ToggleButton">
            <Setter Property="Margin" Value="10"/>
        </Style>
        <!--<Style x:Key="DarkToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="{StaticResource UncheckedBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource BrightForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}"/>
            <Setter Property="Padding" Value="14,4"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="RootGrid"
                              CornerRadius="20">
                            <Grid.Background>
                                <SolidColorBrush Color="{StaticResource UncheckedColor}"/>
                            </Grid.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates" CurrentStateChanged="CommonStates_CurrentStateChanged">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource UncheckedColor}" Duration="0:0:0.2"/>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource UncheckedPointerOverColor}" Duration="0:0:0.2"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DarkButtonBorderBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            -->
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:2" To="0.0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="RootGrid"/>-->
        <!--
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource UncheckedPressedColor}" Duration="0:0:0.2"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            -->
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:2" To="0.0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="RootGrid"/>-->
        <!--
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            -->
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:2" To="0.0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="RootGrid"/>-->
        <!--
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource CheckedColor}" Duration="0:0:0.2"/>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource CheckedPointerOverColor}" Duration="0:0:0.2"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DarkButtonBorderBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            -->
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:2" To="0.0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="RootGrid"/>-->
        <!--
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource CheckedPressedColor}" Duration="0:0:0.2"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            -->
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:2" To="0.0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="RootGrid"/>-->
        <!--
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            -->
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:2" To="90.0" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" Storyboard.TargetName="RootGrid"/>-->
        <!--
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" 
                                              AutomationProperties.AccessibilityView="Raw" 
                                              BorderBrush="{TemplateBinding BorderBrush}" 
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Padding="{TemplateBinding Padding}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              CornerRadius="{Binding CornerRadius, ElementName=RootGrid}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->



    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Margin="{StaticResource MediumLeftRightMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock
                Grid.Row="0"
                x:Uid="Settings_Title"
                x:Name="TitlePage"
                Style="{StaticResource PageTitleStyle}" />

            <StackPanel Grid.Row="1">
                <TextBlock
                    x:Uid="Settings_Personalization"
                    Style="{StaticResource SubtitleTextBlockStyle}" />

                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}">
                    <TextBlock
                        x:Uid="Settings_Theme"
                        Style="{StaticResource BodyTextStyle}" />

                    <StackPanel Margin="{StaticResource EightTopMargin}">
                        <RadioButton
                            x:Uid="Settings_Theme_Light"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=TwoWay}"
                            Command="{x:Bind ViewModel.SwitchThemeCommand}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Light</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                            x:Uid="Settings_Theme_Dark"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=TwoWay}"
                            Command="{x:Bind ViewModel.SwitchThemeCommand}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Dark</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                            x:Uid="Settings_Theme_Default"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=TwoWay}"
                            Command="{x:Bind ViewModel.SwitchThemeCommand}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Default</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                    </StackPanel>
                </StackPanel>

                <TextBlock
                        x:Uid="Settings_About"
                        Style="{StaticResource SubtitleTextBlockStyle}"/>

                <StackPanel Margin="{StaticResource EightTopMargin}">
                    <TextBlock
                        Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                    <TextBlock
                        x:Uid="Settings_AboutDescription"
                        Margin="{StaticResource EightTopMargin}" />

                    <HyperlinkButton
                        x:Uid="Settings_PrivacyTermsLink"
                        Margin="{StaticResource EightTopMargin}" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <!--  Adaptive triggers  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TitlePage.Margin" Value="48,0,12,7"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
